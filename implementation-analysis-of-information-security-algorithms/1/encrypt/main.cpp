#include <algorithm>
#include <array>
#include <cassert>
#include <cstdint>
#include <iostream>
#include <filesystem>
#include <fstream>
#include <iterator>
#include <vector>

using byte_t = std::uint8_t;

std::vector<byte_t> read_from_file(std::filesystem::path filename)
{
    if (!std::filesystem::is_regular_file(filename))
    {
        throw std::invalid_argument("Error: input file does not seem to be a regular file");
    }
    std::ifstream file(filename, std::ios_base::in | std::ios_base::binary);
    file.unsetf(std::ios::skipws);
    std::streampos fileSize;
    file.seekg(0, std::ios::end);
    std::streampos input_file_size = file.tellg();
    file.seekg(0, std::ios::beg);
    std::vector<byte_t> contents;
    contents.reserve(input_file_size);
    contents.insert(contents.begin(), std::istream_iterator<byte_t>(file), std::istream_iterator<byte_t>());
    return contents;
}

void store_to_file(std::filesystem::path filename, const std::vector<byte_t>& contents)
{
    std::ofstream file(filename, std::ios_base::out | std::ios_base::binary);
    file.write(reinterpret_cast<const char*>(contents.data()), contents.size());
}

void encrypt(std::vector<byte_t>& data)
{
    static constexpr std::size_t PERIOD_SIZE = 16;

    static const std::array<std::array<byte_t, PERIOD_SIZE>, 256> ENCRYPTION_TABLE =
    {
        std::array<byte_t, PERIOD_SIZE>{ 0x6C, 0x72, 0x69, 0x38, 0x33, 0x6E, 0x76, 0x37, 0x6B, 0x77, 0x6B, 0x77, 0x65, 0x34, 0x75, 0x33, },
        std::array<byte_t, PERIOD_SIZE>{ 0x6D, 0x73, 0x68, 0x39, 0x32, 0x6F, 0x77, 0x36, 0x6A, 0x76, 0x6A, 0x76, 0x64, 0x35, 0x74, 0x32, },
        std::array<byte_t, PERIOD_SIZE>{ 0x6E, 0x70, 0x6B, 0x3A, 0x31, 0x6C, 0x74, 0x35, 0x69, 0x75, 0x69, 0x75, 0x67, 0x36, 0x77, 0x31, },
        std::array<byte_t, PERIOD_SIZE>{ 0x6F, 0x71, 0x6A, 0x3B, 0x30, 0x6D, 0x75, 0x34, 0x68, 0x74, 0x68, 0x74, 0x66, 0x37, 0x76, 0x30, },
        std::array<byte_t, PERIOD_SIZE>{ 0x68, 0x76, 0x6D, 0x3C, 0x37, 0x6A, 0x72, 0x33, 0x6F, 0x73, 0x6F, 0x73, 0x61, 0x30, 0x71, 0x37, },
        std::array<byte_t, PERIOD_SIZE>{ 0x69, 0x77, 0x6C, 0x3D, 0x36, 0x6B, 0x73, 0x32, 0x6E, 0x72, 0x6E, 0x72, 0x60, 0x31, 0x70, 0x36, },
        std::array<byte_t, PERIOD_SIZE>{ 0x6A, 0x74, 0x6F, 0x3E, 0x35, 0x68, 0x70, 0x31, 0x6D, 0x71, 0x6D, 0x71, 0x63, 0x32, 0x73, 0x35, },
        std::array<byte_t, PERIOD_SIZE>{ 0x6B, 0x75, 0x6E, 0x3F, 0x34, 0x69, 0x71, 0x30, 0x6C, 0x70, 0x6C, 0x70, 0x62, 0x33, 0x72, 0x34, },
        std::array<byte_t, PERIOD_SIZE>{ 0x64, 0x7A, 0x61, 0x30, 0x3B, 0x66, 0x7E, 0x3F, 0x63, 0x7F, 0x63, 0x7F, 0x6D, 0x3C, 0x7D, 0x3B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x65, 0x7B, 0x60, 0x31, 0x3A, 0x67, 0x7F, 0x3E, 0x62, 0x7E, 0x62, 0x7E, 0x6C, 0x3D, 0x7C, 0x3A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x66, 0x78, 0x63, 0x32, 0x39, 0x64, 0x7C, 0x3D, 0x61, 0x7D, 0x61, 0x7D, 0x6F, 0x3E, 0x7F, 0x39, },
        std::array<byte_t, PERIOD_SIZE>{ 0x67, 0x79, 0x62, 0x33, 0x38, 0x65, 0x7D, 0x3C, 0x60, 0x7C, 0x60, 0x7C, 0x6E, 0x3F, 0x7E, 0x38, },
        std::array<byte_t, PERIOD_SIZE>{ 0x60, 0x7E, 0x65, 0x34, 0x3F, 0x62, 0x7A, 0x3B, 0x67, 0x7B, 0x67, 0x7B, 0x69, 0x38, 0x79, 0x3F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x61, 0x7F, 0x64, 0x35, 0x3E, 0x63, 0x7B, 0x3A, 0x66, 0x7A, 0x66, 0x7A, 0x68, 0x39, 0x78, 0x3E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x62, 0x7C, 0x67, 0x36, 0x3D, 0x60, 0x78, 0x39, 0x65, 0x79, 0x65, 0x79, 0x6B, 0x3A, 0x7B, 0x3D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x63, 0x7D, 0x66, 0x37, 0x3C, 0x61, 0x79, 0x38, 0x64, 0x78, 0x64, 0x78, 0x6A, 0x3B, 0x7A, 0x3C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7C, 0x62, 0x79, 0x28, 0x23, 0x7E, 0x66, 0x27, 0x7B, 0x67, 0x7B, 0x67, 0x75, 0x24, 0x65, 0x23, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7D, 0x63, 0x78, 0x29, 0x22, 0x7F, 0x67, 0x26, 0x7A, 0x66, 0x7A, 0x66, 0x74, 0x25, 0x64, 0x22, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7E, 0x60, 0x7B, 0x2A, 0x21, 0x7C, 0x64, 0x25, 0x79, 0x65, 0x79, 0x65, 0x77, 0x26, 0x67, 0x21, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7F, 0x61, 0x7A, 0x2B, 0x20, 0x7D, 0x65, 0x24, 0x78, 0x64, 0x78, 0x64, 0x76, 0x27, 0x66, 0x20, },
        std::array<byte_t, PERIOD_SIZE>{ 0x78, 0x66, 0x7D, 0x2C, 0x27, 0x7A, 0x62, 0x23, 0x7F, 0x63, 0x7F, 0x63, 0x71, 0x20, 0x61, 0x27, },
        std::array<byte_t, PERIOD_SIZE>{ 0x79, 0x67, 0x7C, 0x2D, 0x26, 0x7B, 0x63, 0x22, 0x7E, 0x62, 0x7E, 0x62, 0x70, 0x21, 0x60, 0x26, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7A, 0x64, 0x7F, 0x2E, 0x25, 0x78, 0x60, 0x21, 0x7D, 0x61, 0x7D, 0x61, 0x73, 0x22, 0x63, 0x25, },
        std::array<byte_t, PERIOD_SIZE>{ 0x7B, 0x65, 0x7E, 0x2F, 0x24, 0x79, 0x61, 0x20, 0x7C, 0x60, 0x7C, 0x60, 0x72, 0x23, 0x62, 0x24, },
        std::array<byte_t, PERIOD_SIZE>{ 0x74, 0x6A, 0x71, 0x20, 0x2B, 0x76, 0x6E, 0x2F, 0x73, 0x6F, 0x73, 0x6F, 0x7D, 0x2C, 0x6D, 0x2B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x75, 0x6B, 0x70, 0x21, 0x2A, 0x77, 0x6F, 0x2E, 0x72, 0x6E, 0x72, 0x6E, 0x7C, 0x2D, 0x6C, 0x2A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x76, 0x68, 0x73, 0x22, 0x29, 0x74, 0x6C, 0x2D, 0x71, 0x6D, 0x71, 0x6D, 0x7F, 0x2E, 0x6F, 0x29, },
        std::array<byte_t, PERIOD_SIZE>{ 0x77, 0x69, 0x72, 0x23, 0x28, 0x75, 0x6D, 0x2C, 0x70, 0x6C, 0x70, 0x6C, 0x7E, 0x2F, 0x6E, 0x28, },
        std::array<byte_t, PERIOD_SIZE>{ 0x70, 0x6E, 0x75, 0x24, 0x2F, 0x72, 0x6A, 0x2B, 0x77, 0x6B, 0x77, 0x6B, 0x79, 0x28, 0x69, 0x2F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x71, 0x6F, 0x74, 0x25, 0x2E, 0x73, 0x6B, 0x2A, 0x76, 0x6A, 0x76, 0x6A, 0x78, 0x29, 0x68, 0x2E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x72, 0x6C, 0x77, 0x26, 0x2D, 0x70, 0x68, 0x29, 0x75, 0x69, 0x75, 0x69, 0x7B, 0x2A, 0x6B, 0x2D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x73, 0x6D, 0x76, 0x27, 0x2C, 0x71, 0x69, 0x28, 0x74, 0x68, 0x74, 0x68, 0x7A, 0x2B, 0x6A, 0x2C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4C, 0x52, 0x49, 0x18, 0x13, 0x4E, 0x56, 0x17, 0x4B, 0x57, 0x4B, 0x57, 0x45, 0x14, 0x55, 0x13, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4D, 0x53, 0x48, 0x19, 0x12, 0x4F, 0x57, 0x16, 0x4A, 0x56, 0x4A, 0x56, 0x44, 0x15, 0x54, 0x12, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4E, 0x50, 0x4B, 0x1A, 0x11, 0x4C, 0x54, 0x15, 0x49, 0x55, 0x49, 0x55, 0x47, 0x16, 0x57, 0x11, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4F, 0x51, 0x4A, 0x1B, 0x10, 0x4D, 0x55, 0x14, 0x48, 0x54, 0x48, 0x54, 0x46, 0x17, 0x56, 0x10, },
        std::array<byte_t, PERIOD_SIZE>{ 0x48, 0x56, 0x4D, 0x1C, 0x17, 0x4A, 0x52, 0x13, 0x4F, 0x53, 0x4F, 0x53, 0x41, 0x10, 0x51, 0x17, },
        std::array<byte_t, PERIOD_SIZE>{ 0x49, 0x57, 0x4C, 0x1D, 0x16, 0x4B, 0x53, 0x12, 0x4E, 0x52, 0x4E, 0x52, 0x40, 0x11, 0x50, 0x16, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4A, 0x54, 0x4F, 0x1E, 0x15, 0x48, 0x50, 0x11, 0x4D, 0x51, 0x4D, 0x51, 0x43, 0x12, 0x53, 0x15, },
        std::array<byte_t, PERIOD_SIZE>{ 0x4B, 0x55, 0x4E, 0x1F, 0x14, 0x49, 0x51, 0x10, 0x4C, 0x50, 0x4C, 0x50, 0x42, 0x13, 0x52, 0x14, },
        std::array<byte_t, PERIOD_SIZE>{ 0x44, 0x5A, 0x41, 0x10, 0x1B, 0x46, 0x5E, 0x1F, 0x43, 0x5F, 0x43, 0x5F, 0x4D, 0x1C, 0x5D, 0x1B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x45, 0x5B, 0x40, 0x11, 0x1A, 0x47, 0x5F, 0x1E, 0x42, 0x5E, 0x42, 0x5E, 0x4C, 0x1D, 0x5C, 0x1A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x46, 0x58, 0x43, 0x12, 0x19, 0x44, 0x5C, 0x1D, 0x41, 0x5D, 0x41, 0x5D, 0x4F, 0x1E, 0x5F, 0x19, },
        std::array<byte_t, PERIOD_SIZE>{ 0x47, 0x59, 0x42, 0x13, 0x18, 0x45, 0x5D, 0x1C, 0x40, 0x5C, 0x40, 0x5C, 0x4E, 0x1F, 0x5E, 0x18, },
        std::array<byte_t, PERIOD_SIZE>{ 0x40, 0x5E, 0x45, 0x14, 0x1F, 0x42, 0x5A, 0x1B, 0x47, 0x5B, 0x47, 0x5B, 0x49, 0x18, 0x59, 0x1F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x41, 0x5F, 0x44, 0x15, 0x1E, 0x43, 0x5B, 0x1A, 0x46, 0x5A, 0x46, 0x5A, 0x48, 0x19, 0x58, 0x1E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x42, 0x5C, 0x47, 0x16, 0x1D, 0x40, 0x58, 0x19, 0x45, 0x59, 0x45, 0x59, 0x4B, 0x1A, 0x5B, 0x1D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x43, 0x5D, 0x46, 0x17, 0x1C, 0x41, 0x59, 0x18, 0x44, 0x58, 0x44, 0x58, 0x4A, 0x1B, 0x5A, 0x1C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5C, 0x42, 0x59, 0x08, 0x03, 0x5E, 0x46, 0x07, 0x5B, 0x47, 0x5B, 0x47, 0x55, 0x04, 0x45, 0x03, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5D, 0x43, 0x58, 0x09, 0x02, 0x5F, 0x47, 0x06, 0x5A, 0x46, 0x5A, 0x46, 0x54, 0x05, 0x44, 0x02, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5E, 0x40, 0x5B, 0x0A, 0x01, 0x5C, 0x44, 0x05, 0x59, 0x45, 0x59, 0x45, 0x57, 0x06, 0x47, 0x01, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5F, 0x41, 0x5A, 0x0B, 0x00, 0x5D, 0x45, 0x04, 0x58, 0x44, 0x58, 0x44, 0x56, 0x07, 0x46, 0x00, },
        std::array<byte_t, PERIOD_SIZE>{ 0x58, 0x46, 0x5D, 0x0C, 0x07, 0x5A, 0x42, 0x03, 0x5F, 0x43, 0x5F, 0x43, 0x51, 0x00, 0x41, 0x07, },
        std::array<byte_t, PERIOD_SIZE>{ 0x59, 0x47, 0x5C, 0x0D, 0x06, 0x5B, 0x43, 0x02, 0x5E, 0x42, 0x5E, 0x42, 0x50, 0x01, 0x40, 0x06, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5A, 0x44, 0x5F, 0x0E, 0x05, 0x58, 0x40, 0x01, 0x5D, 0x41, 0x5D, 0x41, 0x53, 0x02, 0x43, 0x05, },
        std::array<byte_t, PERIOD_SIZE>{ 0x5B, 0x45, 0x5E, 0x0F, 0x04, 0x59, 0x41, 0x00, 0x5C, 0x40, 0x5C, 0x40, 0x52, 0x03, 0x42, 0x04, },
        std::array<byte_t, PERIOD_SIZE>{ 0x54, 0x4A, 0x51, 0x00, 0x0B, 0x56, 0x4E, 0x0F, 0x53, 0x4F, 0x53, 0x4F, 0x5D, 0x0C, 0x4D, 0x0B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x55, 0x4B, 0x50, 0x01, 0x0A, 0x57, 0x4F, 0x0E, 0x52, 0x4E, 0x52, 0x4E, 0x5C, 0x0D, 0x4C, 0x0A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x56, 0x48, 0x53, 0x02, 0x09, 0x54, 0x4C, 0x0D, 0x51, 0x4D, 0x51, 0x4D, 0x5F, 0x0E, 0x4F, 0x09, },
        std::array<byte_t, PERIOD_SIZE>{ 0x57, 0x49, 0x52, 0x03, 0x08, 0x55, 0x4D, 0x0C, 0x50, 0x4C, 0x50, 0x4C, 0x5E, 0x0F, 0x4E, 0x08, },
        std::array<byte_t, PERIOD_SIZE>{ 0x50, 0x4E, 0x55, 0x04, 0x0F, 0x52, 0x4A, 0x0B, 0x57, 0x4B, 0x57, 0x4B, 0x59, 0x08, 0x49, 0x0F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x51, 0x4F, 0x54, 0x05, 0x0E, 0x53, 0x4B, 0x0A, 0x56, 0x4A, 0x56, 0x4A, 0x58, 0x09, 0x48, 0x0E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x52, 0x4C, 0x57, 0x06, 0x0D, 0x50, 0x48, 0x09, 0x55, 0x49, 0x55, 0x49, 0x5B, 0x0A, 0x4B, 0x0D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x53, 0x4D, 0x56, 0x07, 0x0C, 0x51, 0x49, 0x08, 0x54, 0x48, 0x54, 0x48, 0x5A, 0x0B, 0x4A, 0x0C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2C, 0x32, 0x29, 0x78, 0x73, 0x2E, 0x36, 0x77, 0x2B, 0x37, 0x2B, 0x37, 0x25, 0x74, 0x35, 0x73, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2D, 0x33, 0x28, 0x79, 0x72, 0x2F, 0x37, 0x76, 0x2A, 0x36, 0x2A, 0x36, 0x24, 0x75, 0x34, 0x72, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2E, 0x30, 0x2B, 0x7A, 0x71, 0x2C, 0x34, 0x75, 0x29, 0x35, 0x29, 0x35, 0x27, 0x76, 0x37, 0x71, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2F, 0x31, 0x2A, 0x7B, 0x70, 0x2D, 0x35, 0x74, 0x28, 0x34, 0x28, 0x34, 0x26, 0x77, 0x36, 0x70, },
        std::array<byte_t, PERIOD_SIZE>{ 0x28, 0x36, 0x2D, 0x7C, 0x77, 0x2A, 0x32, 0x73, 0x2F, 0x33, 0x2F, 0x33, 0x21, 0x70, 0x31, 0x77, },
        std::array<byte_t, PERIOD_SIZE>{ 0x29, 0x37, 0x2C, 0x7D, 0x76, 0x2B, 0x33, 0x72, 0x2E, 0x32, 0x2E, 0x32, 0x20, 0x71, 0x30, 0x76, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2A, 0x34, 0x2F, 0x7E, 0x75, 0x28, 0x30, 0x71, 0x2D, 0x31, 0x2D, 0x31, 0x23, 0x72, 0x33, 0x75, },
        std::array<byte_t, PERIOD_SIZE>{ 0x2B, 0x35, 0x2E, 0x7F, 0x74, 0x29, 0x31, 0x70, 0x2C, 0x30, 0x2C, 0x30, 0x22, 0x73, 0x32, 0x74, },
        std::array<byte_t, PERIOD_SIZE>{ 0x24, 0x3A, 0x21, 0x70, 0x7B, 0x26, 0x3E, 0x7F, 0x23, 0x3F, 0x23, 0x3F, 0x2D, 0x7C, 0x3D, 0x7B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x25, 0x3B, 0x20, 0x71, 0x7A, 0x27, 0x3F, 0x7E, 0x22, 0x3E, 0x22, 0x3E, 0x2C, 0x7D, 0x3C, 0x7A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x26, 0x38, 0x23, 0x72, 0x79, 0x24, 0x3C, 0x7D, 0x21, 0x3D, 0x21, 0x3D, 0x2F, 0x7E, 0x3F, 0x79, },
        std::array<byte_t, PERIOD_SIZE>{ 0x27, 0x39, 0x22, 0x73, 0x78, 0x25, 0x3D, 0x7C, 0x20, 0x3C, 0x20, 0x3C, 0x2E, 0x7F, 0x3E, 0x78, },
        std::array<byte_t, PERIOD_SIZE>{ 0x20, 0x3E, 0x25, 0x74, 0x7F, 0x22, 0x3A, 0x7B, 0x27, 0x3B, 0x27, 0x3B, 0x29, 0x78, 0x39, 0x7F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x21, 0x3F, 0x24, 0x75, 0x7E, 0x23, 0x3B, 0x7A, 0x26, 0x3A, 0x26, 0x3A, 0x28, 0x79, 0x38, 0x7E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x22, 0x3C, 0x27, 0x76, 0x7D, 0x20, 0x38, 0x79, 0x25, 0x39, 0x25, 0x39, 0x2B, 0x7A, 0x3B, 0x7D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x23, 0x3D, 0x26, 0x77, 0x7C, 0x21, 0x39, 0x78, 0x24, 0x38, 0x24, 0x38, 0x2A, 0x7B, 0x3A, 0x7C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3C, 0x22, 0x39, 0x68, 0x63, 0x3E, 0x26, 0x67, 0x3B, 0x27, 0x3B, 0x27, 0x35, 0x64, 0x25, 0x63, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3D, 0x23, 0x38, 0x69, 0x62, 0x3F, 0x27, 0x66, 0x3A, 0x26, 0x3A, 0x26, 0x34, 0x65, 0x24, 0x62, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3E, 0x20, 0x3B, 0x6A, 0x61, 0x3C, 0x24, 0x65, 0x39, 0x25, 0x39, 0x25, 0x37, 0x66, 0x27, 0x61, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3F, 0x21, 0x3A, 0x6B, 0x60, 0x3D, 0x25, 0x64, 0x38, 0x24, 0x38, 0x24, 0x36, 0x67, 0x26, 0x60, },
        std::array<byte_t, PERIOD_SIZE>{ 0x38, 0x26, 0x3D, 0x6C, 0x67, 0x3A, 0x22, 0x63, 0x3F, 0x23, 0x3F, 0x23, 0x31, 0x60, 0x21, 0x67, },
        std::array<byte_t, PERIOD_SIZE>{ 0x39, 0x27, 0x3C, 0x6D, 0x66, 0x3B, 0x23, 0x62, 0x3E, 0x22, 0x3E, 0x22, 0x30, 0x61, 0x20, 0x66, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3A, 0x24, 0x3F, 0x6E, 0x65, 0x38, 0x20, 0x61, 0x3D, 0x21, 0x3D, 0x21, 0x33, 0x62, 0x23, 0x65, },
        std::array<byte_t, PERIOD_SIZE>{ 0x3B, 0x25, 0x3E, 0x6F, 0x64, 0x39, 0x21, 0x60, 0x3C, 0x20, 0x3C, 0x20, 0x32, 0x63, 0x22, 0x64, },
        std::array<byte_t, PERIOD_SIZE>{ 0x34, 0x2A, 0x31, 0x60, 0x6B, 0x36, 0x2E, 0x6F, 0x33, 0x2F, 0x33, 0x2F, 0x3D, 0x6C, 0x2D, 0x6B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x35, 0x2B, 0x30, 0x61, 0x6A, 0x37, 0x2F, 0x6E, 0x32, 0x2E, 0x32, 0x2E, 0x3C, 0x6D, 0x2C, 0x6A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x36, 0x28, 0x33, 0x62, 0x69, 0x34, 0x2C, 0x6D, 0x31, 0x2D, 0x31, 0x2D, 0x3F, 0x6E, 0x2F, 0x69, },
        std::array<byte_t, PERIOD_SIZE>{ 0x37, 0x29, 0x32, 0x63, 0x68, 0x35, 0x2D, 0x6C, 0x30, 0x2C, 0x30, 0x2C, 0x3E, 0x6F, 0x2E, 0x68, },
        std::array<byte_t, PERIOD_SIZE>{ 0x30, 0x2E, 0x35, 0x64, 0x6F, 0x32, 0x2A, 0x6B, 0x37, 0x2B, 0x37, 0x2B, 0x39, 0x68, 0x29, 0x6F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x31, 0x2F, 0x34, 0x65, 0x6E, 0x33, 0x2B, 0x6A, 0x36, 0x2A, 0x36, 0x2A, 0x38, 0x69, 0x28, 0x6E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x32, 0x2C, 0x37, 0x66, 0x6D, 0x30, 0x28, 0x69, 0x35, 0x29, 0x35, 0x29, 0x3B, 0x6A, 0x2B, 0x6D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x33, 0x2D, 0x36, 0x67, 0x6C, 0x31, 0x29, 0x68, 0x34, 0x28, 0x34, 0x28, 0x3A, 0x6B, 0x2A, 0x6C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0C, 0x12, 0x09, 0x58, 0x53, 0x0E, 0x16, 0x57, 0x0B, 0x17, 0x0B, 0x17, 0x05, 0x54, 0x15, 0x53, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0D, 0x13, 0x08, 0x59, 0x52, 0x0F, 0x17, 0x56, 0x0A, 0x16, 0x0A, 0x16, 0x04, 0x55, 0x14, 0x52, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0E, 0x10, 0x0B, 0x5A, 0x51, 0x0C, 0x14, 0x55, 0x09, 0x15, 0x09, 0x15, 0x07, 0x56, 0x17, 0x51, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0F, 0x11, 0x0A, 0x5B, 0x50, 0x0D, 0x15, 0x54, 0x08, 0x14, 0x08, 0x14, 0x06, 0x57, 0x16, 0x50, },
        std::array<byte_t, PERIOD_SIZE>{ 0x08, 0x16, 0x0D, 0x5C, 0x57, 0x0A, 0x12, 0x53, 0x0F, 0x13, 0x0F, 0x13, 0x01, 0x50, 0x11, 0x57, },
        std::array<byte_t, PERIOD_SIZE>{ 0x09, 0x17, 0x0C, 0x5D, 0x56, 0x0B, 0x13, 0x52, 0x0E, 0x12, 0x0E, 0x12, 0x00, 0x51, 0x10, 0x56, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0A, 0x14, 0x0F, 0x5E, 0x55, 0x08, 0x10, 0x51, 0x0D, 0x11, 0x0D, 0x11, 0x03, 0x52, 0x13, 0x55, },
        std::array<byte_t, PERIOD_SIZE>{ 0x0B, 0x15, 0x0E, 0x5F, 0x54, 0x09, 0x11, 0x50, 0x0C, 0x10, 0x0C, 0x10, 0x02, 0x53, 0x12, 0x54, },
        std::array<byte_t, PERIOD_SIZE>{ 0x04, 0x1A, 0x01, 0x50, 0x5B, 0x06, 0x1E, 0x5F, 0x03, 0x1F, 0x03, 0x1F, 0x0D, 0x5C, 0x1D, 0x5B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x05, 0x1B, 0x00, 0x51, 0x5A, 0x07, 0x1F, 0x5E, 0x02, 0x1E, 0x02, 0x1E, 0x0C, 0x5D, 0x1C, 0x5A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x06, 0x18, 0x03, 0x52, 0x59, 0x04, 0x1C, 0x5D, 0x01, 0x1D, 0x01, 0x1D, 0x0F, 0x5E, 0x1F, 0x59, },
        std::array<byte_t, PERIOD_SIZE>{ 0x07, 0x19, 0x02, 0x53, 0x58, 0x05, 0x1D, 0x5C, 0x00, 0x1C, 0x00, 0x1C, 0x0E, 0x5F, 0x1E, 0x58, },
        std::array<byte_t, PERIOD_SIZE>{ 0x00, 0x1E, 0x05, 0x54, 0x5F, 0x02, 0x1A, 0x5B, 0x07, 0x1B, 0x07, 0x1B, 0x09, 0x58, 0x19, 0x5F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x01, 0x1F, 0x04, 0x55, 0x5E, 0x03, 0x1B, 0x5A, 0x06, 0x1A, 0x06, 0x1A, 0x08, 0x59, 0x18, 0x5E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x02, 0x1C, 0x07, 0x56, 0x5D, 0x00, 0x18, 0x59, 0x05, 0x19, 0x05, 0x19, 0x0B, 0x5A, 0x1B, 0x5D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x03, 0x1D, 0x06, 0x57, 0x5C, 0x01, 0x19, 0x58, 0x04, 0x18, 0x04, 0x18, 0x0A, 0x5B, 0x1A, 0x5C, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1C, 0x02, 0x19, 0x48, 0x43, 0x1E, 0x06, 0x47, 0x1B, 0x07, 0x1B, 0x07, 0x15, 0x44, 0x05, 0x43, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1D, 0x03, 0x18, 0x49, 0x42, 0x1F, 0x07, 0x46, 0x1A, 0x06, 0x1A, 0x06, 0x14, 0x45, 0x04, 0x42, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1E, 0x00, 0x1B, 0x4A, 0x41, 0x1C, 0x04, 0x45, 0x19, 0x05, 0x19, 0x05, 0x17, 0x46, 0x07, 0x41, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1F, 0x01, 0x1A, 0x4B, 0x40, 0x1D, 0x05, 0x44, 0x18, 0x04, 0x18, 0x04, 0x16, 0x47, 0x06, 0x40, },
        std::array<byte_t, PERIOD_SIZE>{ 0x18, 0x06, 0x1D, 0x4C, 0x47, 0x1A, 0x02, 0x43, 0x1F, 0x03, 0x1F, 0x03, 0x11, 0x40, 0x01, 0x47, },
        std::array<byte_t, PERIOD_SIZE>{ 0x19, 0x07, 0x1C, 0x4D, 0x46, 0x1B, 0x03, 0x42, 0x1E, 0x02, 0x1E, 0x02, 0x10, 0x41, 0x00, 0x46, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1A, 0x04, 0x1F, 0x4E, 0x45, 0x18, 0x00, 0x41, 0x1D, 0x01, 0x1D, 0x01, 0x13, 0x42, 0x03, 0x45, },
        std::array<byte_t, PERIOD_SIZE>{ 0x1B, 0x05, 0x1E, 0x4F, 0x44, 0x19, 0x01, 0x40, 0x1C, 0x00, 0x1C, 0x00, 0x12, 0x43, 0x02, 0x44, },
        std::array<byte_t, PERIOD_SIZE>{ 0x14, 0x0A, 0x11, 0x40, 0x4B, 0x16, 0x0E, 0x4F, 0x13, 0x0F, 0x13, 0x0F, 0x1D, 0x4C, 0x0D, 0x4B, },
        std::array<byte_t, PERIOD_SIZE>{ 0x15, 0x0B, 0x10, 0x41, 0x4A, 0x17, 0x0F, 0x4E, 0x12, 0x0E, 0x12, 0x0E, 0x1C, 0x4D, 0x0C, 0x4A, },
        std::array<byte_t, PERIOD_SIZE>{ 0x16, 0x08, 0x13, 0x42, 0x49, 0x14, 0x0C, 0x4D, 0x11, 0x0D, 0x11, 0x0D, 0x1F, 0x4E, 0x0F, 0x49, },
        std::array<byte_t, PERIOD_SIZE>{ 0x17, 0x09, 0x12, 0x43, 0x48, 0x15, 0x0D, 0x4C, 0x10, 0x0C, 0x10, 0x0C, 0x1E, 0x4F, 0x0E, 0x48, },
        std::array<byte_t, PERIOD_SIZE>{ 0x10, 0x0E, 0x15, 0x44, 0x4F, 0x12, 0x0A, 0x4B, 0x17, 0x0B, 0x17, 0x0B, 0x19, 0x48, 0x09, 0x4F, },
        std::array<byte_t, PERIOD_SIZE>{ 0x11, 0x0F, 0x14, 0x45, 0x4E, 0x13, 0x0B, 0x4A, 0x16, 0x0A, 0x16, 0x0A, 0x18, 0x49, 0x08, 0x4E, },
        std::array<byte_t, PERIOD_SIZE>{ 0x12, 0x0C, 0x17, 0x46, 0x4D, 0x10, 0x08, 0x49, 0x15, 0x09, 0x15, 0x09, 0x1B, 0x4A, 0x0B, 0x4D, },
        std::array<byte_t, PERIOD_SIZE>{ 0x13, 0x0D, 0x16, 0x47, 0x4C, 0x11, 0x09, 0x48, 0x14, 0x08, 0x14, 0x08, 0x1A, 0x4B, 0x0A, 0x4C, },
        std::array<byte_t, PERIOD_SIZE>{ 0xEC, 0xF2, 0xE9, 0xB8, 0xB3, 0xEE, 0xF6, 0xB7, 0xEB, 0xF7, 0xEB, 0xF7, 0xE5, 0xB4, 0xF5, 0xB3, },
        std::array<byte_t, PERIOD_SIZE>{ 0xED, 0xF3, 0xE8, 0xB9, 0xB2, 0xEF, 0xF7, 0xB6, 0xEA, 0xF6, 0xEA, 0xF6, 0xE4, 0xB5, 0xF4, 0xB2, },
        std::array<byte_t, PERIOD_SIZE>{ 0xEE, 0xF0, 0xEB, 0xBA, 0xB1, 0xEC, 0xF4, 0xB5, 0xE9, 0xF5, 0xE9, 0xF5, 0xE7, 0xB6, 0xF7, 0xB1, },
        std::array<byte_t, PERIOD_SIZE>{ 0xEF, 0xF1, 0xEA, 0xBB, 0xB0, 0xED, 0xF5, 0xB4, 0xE8, 0xF4, 0xE8, 0xF4, 0xE6, 0xB7, 0xF6, 0xB0, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE8, 0xF6, 0xED, 0xBC, 0xB7, 0xEA, 0xF2, 0xB3, 0xEF, 0xF3, 0xEF, 0xF3, 0xE1, 0xB0, 0xF1, 0xB7, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE9, 0xF7, 0xEC, 0xBD, 0xB6, 0xEB, 0xF3, 0xB2, 0xEE, 0xF2, 0xEE, 0xF2, 0xE0, 0xB1, 0xF0, 0xB6, },
        std::array<byte_t, PERIOD_SIZE>{ 0xEA, 0xF4, 0xEF, 0xBE, 0xB5, 0xE8, 0xF0, 0xB1, 0xED, 0xF1, 0xED, 0xF1, 0xE3, 0xB2, 0xF3, 0xB5, },
        std::array<byte_t, PERIOD_SIZE>{ 0xEB, 0xF5, 0xEE, 0xBF, 0xB4, 0xE9, 0xF1, 0xB0, 0xEC, 0xF0, 0xEC, 0xF0, 0xE2, 0xB3, 0xF2, 0xB4, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE4, 0xFA, 0xE1, 0xB0, 0xBB, 0xE6, 0xFE, 0xBF, 0xE3, 0xFF, 0xE3, 0xFF, 0xED, 0xBC, 0xFD, 0xBB, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE5, 0xFB, 0xE0, 0xB1, 0xBA, 0xE7, 0xFF, 0xBE, 0xE2, 0xFE, 0xE2, 0xFE, 0xEC, 0xBD, 0xFC, 0xBA, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE6, 0xF8, 0xE3, 0xB2, 0xB9, 0xE4, 0xFC, 0xBD, 0xE1, 0xFD, 0xE1, 0xFD, 0xEF, 0xBE, 0xFF, 0xB9, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE7, 0xF9, 0xE2, 0xB3, 0xB8, 0xE5, 0xFD, 0xBC, 0xE0, 0xFC, 0xE0, 0xFC, 0xEE, 0xBF, 0xFE, 0xB8, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE0, 0xFE, 0xE5, 0xB4, 0xBF, 0xE2, 0xFA, 0xBB, 0xE7, 0xFB, 0xE7, 0xFB, 0xE9, 0xB8, 0xF9, 0xBF, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE1, 0xFF, 0xE4, 0xB5, 0xBE, 0xE3, 0xFB, 0xBA, 0xE6, 0xFA, 0xE6, 0xFA, 0xE8, 0xB9, 0xF8, 0xBE, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE2, 0xFC, 0xE7, 0xB6, 0xBD, 0xE0, 0xF8, 0xB9, 0xE5, 0xF9, 0xE5, 0xF9, 0xEB, 0xBA, 0xFB, 0xBD, },
        std::array<byte_t, PERIOD_SIZE>{ 0xE3, 0xFD, 0xE6, 0xB7, 0xBC, 0xE1, 0xF9, 0xB8, 0xE4, 0xF8, 0xE4, 0xF8, 0xEA, 0xBB, 0xFA, 0xBC, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFC, 0xE2, 0xF9, 0xA8, 0xA3, 0xFE, 0xE6, 0xA7, 0xFB, 0xE7, 0xFB, 0xE7, 0xF5, 0xA4, 0xE5, 0xA3, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFD, 0xE3, 0xF8, 0xA9, 0xA2, 0xFF, 0xE7, 0xA6, 0xFA, 0xE6, 0xFA, 0xE6, 0xF4, 0xA5, 0xE4, 0xA2, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFE, 0xE0, 0xFB, 0xAA, 0xA1, 0xFC, 0xE4, 0xA5, 0xF9, 0xE5, 0xF9, 0xE5, 0xF7, 0xA6, 0xE7, 0xA1, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFF, 0xE1, 0xFA, 0xAB, 0xA0, 0xFD, 0xE5, 0xA4, 0xF8, 0xE4, 0xF8, 0xE4, 0xF6, 0xA7, 0xE6, 0xA0, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF8, 0xE6, 0xFD, 0xAC, 0xA7, 0xFA, 0xE2, 0xA3, 0xFF, 0xE3, 0xFF, 0xE3, 0xF1, 0xA0, 0xE1, 0xA7, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF9, 0xE7, 0xFC, 0xAD, 0xA6, 0xFB, 0xE3, 0xA2, 0xFE, 0xE2, 0xFE, 0xE2, 0xF0, 0xA1, 0xE0, 0xA6, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFA, 0xE4, 0xFF, 0xAE, 0xA5, 0xF8, 0xE0, 0xA1, 0xFD, 0xE1, 0xFD, 0xE1, 0xF3, 0xA2, 0xE3, 0xA5, },
        std::array<byte_t, PERIOD_SIZE>{ 0xFB, 0xE5, 0xFE, 0xAF, 0xA4, 0xF9, 0xE1, 0xA0, 0xFC, 0xE0, 0xFC, 0xE0, 0xF2, 0xA3, 0xE2, 0xA4, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF4, 0xEA, 0xF1, 0xA0, 0xAB, 0xF6, 0xEE, 0xAF, 0xF3, 0xEF, 0xF3, 0xEF, 0xFD, 0xAC, 0xED, 0xAB, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF5, 0xEB, 0xF0, 0xA1, 0xAA, 0xF7, 0xEF, 0xAE, 0xF2, 0xEE, 0xF2, 0xEE, 0xFC, 0xAD, 0xEC, 0xAA, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF6, 0xE8, 0xF3, 0xA2, 0xA9, 0xF4, 0xEC, 0xAD, 0xF1, 0xED, 0xF1, 0xED, 0xFF, 0xAE, 0xEF, 0xA9, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF7, 0xE9, 0xF2, 0xA3, 0xA8, 0xF5, 0xED, 0xAC, 0xF0, 0xEC, 0xF0, 0xEC, 0xFE, 0xAF, 0xEE, 0xA8, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF0, 0xEE, 0xF5, 0xA4, 0xAF, 0xF2, 0xEA, 0xAB, 0xF7, 0xEB, 0xF7, 0xEB, 0xF9, 0xA8, 0xE9, 0xAF, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF1, 0xEF, 0xF4, 0xA5, 0xAE, 0xF3, 0xEB, 0xAA, 0xF6, 0xEA, 0xF6, 0xEA, 0xF8, 0xA9, 0xE8, 0xAE, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF2, 0xEC, 0xF7, 0xA6, 0xAD, 0xF0, 0xE8, 0xA9, 0xF5, 0xE9, 0xF5, 0xE9, 0xFB, 0xAA, 0xEB, 0xAD, },
        std::array<byte_t, PERIOD_SIZE>{ 0xF3, 0xED, 0xF6, 0xA7, 0xAC, 0xF1, 0xE9, 0xA8, 0xF4, 0xE8, 0xF4, 0xE8, 0xFA, 0xAB, 0xEA, 0xAC, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCC, 0xD2, 0xC9, 0x98, 0x93, 0xCE, 0xD6, 0x97, 0xCB, 0xD7, 0xCB, 0xD7, 0xC5, 0x94, 0xD5, 0x93, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCD, 0xD3, 0xC8, 0x99, 0x92, 0xCF, 0xD7, 0x96, 0xCA, 0xD6, 0xCA, 0xD6, 0xC4, 0x95, 0xD4, 0x92, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCE, 0xD0, 0xCB, 0x9A, 0x91, 0xCC, 0xD4, 0x95, 0xC9, 0xD5, 0xC9, 0xD5, 0xC7, 0x96, 0xD7, 0x91, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCF, 0xD1, 0xCA, 0x9B, 0x90, 0xCD, 0xD5, 0x94, 0xC8, 0xD4, 0xC8, 0xD4, 0xC6, 0x97, 0xD6, 0x90, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC8, 0xD6, 0xCD, 0x9C, 0x97, 0xCA, 0xD2, 0x93, 0xCF, 0xD3, 0xCF, 0xD3, 0xC1, 0x90, 0xD1, 0x97, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC9, 0xD7, 0xCC, 0x9D, 0x96, 0xCB, 0xD3, 0x92, 0xCE, 0xD2, 0xCE, 0xD2, 0xC0, 0x91, 0xD0, 0x96, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCA, 0xD4, 0xCF, 0x9E, 0x95, 0xC8, 0xD0, 0x91, 0xCD, 0xD1, 0xCD, 0xD1, 0xC3, 0x92, 0xD3, 0x95, },
        std::array<byte_t, PERIOD_SIZE>{ 0xCB, 0xD5, 0xCE, 0x9F, 0x94, 0xC9, 0xD1, 0x90, 0xCC, 0xD0, 0xCC, 0xD0, 0xC2, 0x93, 0xD2, 0x94, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC4, 0xDA, 0xC1, 0x90, 0x9B, 0xC6, 0xDE, 0x9F, 0xC3, 0xDF, 0xC3, 0xDF, 0xCD, 0x9C, 0xDD, 0x9B, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC5, 0xDB, 0xC0, 0x91, 0x9A, 0xC7, 0xDF, 0x9E, 0xC2, 0xDE, 0xC2, 0xDE, 0xCC, 0x9D, 0xDC, 0x9A, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC6, 0xD8, 0xC3, 0x92, 0x99, 0xC4, 0xDC, 0x9D, 0xC1, 0xDD, 0xC1, 0xDD, 0xCF, 0x9E, 0xDF, 0x99, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC7, 0xD9, 0xC2, 0x93, 0x98, 0xC5, 0xDD, 0x9C, 0xC0, 0xDC, 0xC0, 0xDC, 0xCE, 0x9F, 0xDE, 0x98, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC0, 0xDE, 0xC5, 0x94, 0x9F, 0xC2, 0xDA, 0x9B, 0xC7, 0xDB, 0xC7, 0xDB, 0xC9, 0x98, 0xD9, 0x9F, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC1, 0xDF, 0xC4, 0x95, 0x9E, 0xC3, 0xDB, 0x9A, 0xC6, 0xDA, 0xC6, 0xDA, 0xC8, 0x99, 0xD8, 0x9E, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC2, 0xDC, 0xC7, 0x96, 0x9D, 0xC0, 0xD8, 0x99, 0xC5, 0xD9, 0xC5, 0xD9, 0xCB, 0x9A, 0xDB, 0x9D, },
        std::array<byte_t, PERIOD_SIZE>{ 0xC3, 0xDD, 0xC6, 0x97, 0x9C, 0xC1, 0xD9, 0x98, 0xC4, 0xD8, 0xC4, 0xD8, 0xCA, 0x9B, 0xDA, 0x9C, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDC, 0xC2, 0xD9, 0x88, 0x83, 0xDE, 0xC6, 0x87, 0xDB, 0xC7, 0xDB, 0xC7, 0xD5, 0x84, 0xC5, 0x83, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDD, 0xC3, 0xD8, 0x89, 0x82, 0xDF, 0xC7, 0x86, 0xDA, 0xC6, 0xDA, 0xC6, 0xD4, 0x85, 0xC4, 0x82, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDE, 0xC0, 0xDB, 0x8A, 0x81, 0xDC, 0xC4, 0x85, 0xD9, 0xC5, 0xD9, 0xC5, 0xD7, 0x86, 0xC7, 0x81, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDF, 0xC1, 0xDA, 0x8B, 0x80, 0xDD, 0xC5, 0x84, 0xD8, 0xC4, 0xD8, 0xC4, 0xD6, 0x87, 0xC6, 0x80, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD8, 0xC6, 0xDD, 0x8C, 0x87, 0xDA, 0xC2, 0x83, 0xDF, 0xC3, 0xDF, 0xC3, 0xD1, 0x80, 0xC1, 0x87, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD9, 0xC7, 0xDC, 0x8D, 0x86, 0xDB, 0xC3, 0x82, 0xDE, 0xC2, 0xDE, 0xC2, 0xD0, 0x81, 0xC0, 0x86, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDA, 0xC4, 0xDF, 0x8E, 0x85, 0xD8, 0xC0, 0x81, 0xDD, 0xC1, 0xDD, 0xC1, 0xD3, 0x82, 0xC3, 0x85, },
        std::array<byte_t, PERIOD_SIZE>{ 0xDB, 0xC5, 0xDE, 0x8F, 0x84, 0xD9, 0xC1, 0x80, 0xDC, 0xC0, 0xDC, 0xC0, 0xD2, 0x83, 0xC2, 0x84, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD4, 0xCA, 0xD1, 0x80, 0x8B, 0xD6, 0xCE, 0x8F, 0xD3, 0xCF, 0xD3, 0xCF, 0xDD, 0x8C, 0xCD, 0x8B, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD5, 0xCB, 0xD0, 0x81, 0x8A, 0xD7, 0xCF, 0x8E, 0xD2, 0xCE, 0xD2, 0xCE, 0xDC, 0x8D, 0xCC, 0x8A, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD6, 0xC8, 0xD3, 0x82, 0x89, 0xD4, 0xCC, 0x8D, 0xD1, 0xCD, 0xD1, 0xCD, 0xDF, 0x8E, 0xCF, 0x89, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD7, 0xC9, 0xD2, 0x83, 0x88, 0xD5, 0xCD, 0x8C, 0xD0, 0xCC, 0xD0, 0xCC, 0xDE, 0x8F, 0xCE, 0x88, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD0, 0xCE, 0xD5, 0x84, 0x8F, 0xD2, 0xCA, 0x8B, 0xD7, 0xCB, 0xD7, 0xCB, 0xD9, 0x88, 0xC9, 0x8F, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD1, 0xCF, 0xD4, 0x85, 0x8E, 0xD3, 0xCB, 0x8A, 0xD6, 0xCA, 0xD6, 0xCA, 0xD8, 0x89, 0xC8, 0x8E, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD2, 0xCC, 0xD7, 0x86, 0x8D, 0xD0, 0xC8, 0x89, 0xD5, 0xC9, 0xD5, 0xC9, 0xDB, 0x8A, 0xCB, 0x8D, },
        std::array<byte_t, PERIOD_SIZE>{ 0xD3, 0xCD, 0xD6, 0x87, 0x8C, 0xD1, 0xC9, 0x88, 0xD4, 0xC8, 0xD4, 0xC8, 0xDA, 0x8B, 0xCA, 0x8C, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAC, 0xB2, 0xA9, 0xF8, 0xF3, 0xAE, 0xB6, 0xF7, 0xAB, 0xB7, 0xAB, 0xB7, 0xA5, 0xF4, 0xB5, 0xF3, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAD, 0xB3, 0xA8, 0xF9, 0xF2, 0xAF, 0xB7, 0xF6, 0xAA, 0xB6, 0xAA, 0xB6, 0xA4, 0xF5, 0xB4, 0xF2, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAE, 0xB0, 0xAB, 0xFA, 0xF1, 0xAC, 0xB4, 0xF5, 0xA9, 0xB5, 0xA9, 0xB5, 0xA7, 0xF6, 0xB7, 0xF1, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAF, 0xB1, 0xAA, 0xFB, 0xF0, 0xAD, 0xB5, 0xF4, 0xA8, 0xB4, 0xA8, 0xB4, 0xA6, 0xF7, 0xB6, 0xF0, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA8, 0xB6, 0xAD, 0xFC, 0xF7, 0xAA, 0xB2, 0xF3, 0xAF, 0xB3, 0xAF, 0xB3, 0xA1, 0xF0, 0xB1, 0xF7, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA9, 0xB7, 0xAC, 0xFD, 0xF6, 0xAB, 0xB3, 0xF2, 0xAE, 0xB2, 0xAE, 0xB2, 0xA0, 0xF1, 0xB0, 0xF6, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAA, 0xB4, 0xAF, 0xFE, 0xF5, 0xA8, 0xB0, 0xF1, 0xAD, 0xB1, 0xAD, 0xB1, 0xA3, 0xF2, 0xB3, 0xF5, },
        std::array<byte_t, PERIOD_SIZE>{ 0xAB, 0xB5, 0xAE, 0xFF, 0xF4, 0xA9, 0xB1, 0xF0, 0xAC, 0xB0, 0xAC, 0xB0, 0xA2, 0xF3, 0xB2, 0xF4, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA4, 0xBA, 0xA1, 0xF0, 0xFB, 0xA6, 0xBE, 0xFF, 0xA3, 0xBF, 0xA3, 0xBF, 0xAD, 0xFC, 0xBD, 0xFB, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA5, 0xBB, 0xA0, 0xF1, 0xFA, 0xA7, 0xBF, 0xFE, 0xA2, 0xBE, 0xA2, 0xBE, 0xAC, 0xFD, 0xBC, 0xFA, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA6, 0xB8, 0xA3, 0xF2, 0xF9, 0xA4, 0xBC, 0xFD, 0xA1, 0xBD, 0xA1, 0xBD, 0xAF, 0xFE, 0xBF, 0xF9, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA7, 0xB9, 0xA2, 0xF3, 0xF8, 0xA5, 0xBD, 0xFC, 0xA0, 0xBC, 0xA0, 0xBC, 0xAE, 0xFF, 0xBE, 0xF8, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA0, 0xBE, 0xA5, 0xF4, 0xFF, 0xA2, 0xBA, 0xFB, 0xA7, 0xBB, 0xA7, 0xBB, 0xA9, 0xF8, 0xB9, 0xFF, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA1, 0xBF, 0xA4, 0xF5, 0xFE, 0xA3, 0xBB, 0xFA, 0xA6, 0xBA, 0xA6, 0xBA, 0xA8, 0xF9, 0xB8, 0xFE, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA2, 0xBC, 0xA7, 0xF6, 0xFD, 0xA0, 0xB8, 0xF9, 0xA5, 0xB9, 0xA5, 0xB9, 0xAB, 0xFA, 0xBB, 0xFD, },
        std::array<byte_t, PERIOD_SIZE>{ 0xA3, 0xBD, 0xA6, 0xF7, 0xFC, 0xA1, 0xB9, 0xF8, 0xA4, 0xB8, 0xA4, 0xB8, 0xAA, 0xFB, 0xBA, 0xFC, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBC, 0xA2, 0xB9, 0xE8, 0xE3, 0xBE, 0xA6, 0xE7, 0xBB, 0xA7, 0xBB, 0xA7, 0xB5, 0xE4, 0xA5, 0xE3, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBD, 0xA3, 0xB8, 0xE9, 0xE2, 0xBF, 0xA7, 0xE6, 0xBA, 0xA6, 0xBA, 0xA6, 0xB4, 0xE5, 0xA4, 0xE2, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBE, 0xA0, 0xBB, 0xEA, 0xE1, 0xBC, 0xA4, 0xE5, 0xB9, 0xA5, 0xB9, 0xA5, 0xB7, 0xE6, 0xA7, 0xE1, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBF, 0xA1, 0xBA, 0xEB, 0xE0, 0xBD, 0xA5, 0xE4, 0xB8, 0xA4, 0xB8, 0xA4, 0xB6, 0xE7, 0xA6, 0xE0, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB8, 0xA6, 0xBD, 0xEC, 0xE7, 0xBA, 0xA2, 0xE3, 0xBF, 0xA3, 0xBF, 0xA3, 0xB1, 0xE0, 0xA1, 0xE7, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB9, 0xA7, 0xBC, 0xED, 0xE6, 0xBB, 0xA3, 0xE2, 0xBE, 0xA2, 0xBE, 0xA2, 0xB0, 0xE1, 0xA0, 0xE6, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBA, 0xA4, 0xBF, 0xEE, 0xE5, 0xB8, 0xA0, 0xE1, 0xBD, 0xA1, 0xBD, 0xA1, 0xB3, 0xE2, 0xA3, 0xE5, },
        std::array<byte_t, PERIOD_SIZE>{ 0xBB, 0xA5, 0xBE, 0xEF, 0xE4, 0xB9, 0xA1, 0xE0, 0xBC, 0xA0, 0xBC, 0xA0, 0xB2, 0xE3, 0xA2, 0xE4, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB4, 0xAA, 0xB1, 0xE0, 0xEB, 0xB6, 0xAE, 0xEF, 0xB3, 0xAF, 0xB3, 0xAF, 0xBD, 0xEC, 0xAD, 0xEB, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB5, 0xAB, 0xB0, 0xE1, 0xEA, 0xB7, 0xAF, 0xEE, 0xB2, 0xAE, 0xB2, 0xAE, 0xBC, 0xED, 0xAC, 0xEA, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB6, 0xA8, 0xB3, 0xE2, 0xE9, 0xB4, 0xAC, 0xED, 0xB1, 0xAD, 0xB1, 0xAD, 0xBF, 0xEE, 0xAF, 0xE9, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB7, 0xA9, 0xB2, 0xE3, 0xE8, 0xB5, 0xAD, 0xEC, 0xB0, 0xAC, 0xB0, 0xAC, 0xBE, 0xEF, 0xAE, 0xE8, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB0, 0xAE, 0xB5, 0xE4, 0xEF, 0xB2, 0xAA, 0xEB, 0xB7, 0xAB, 0xB7, 0xAB, 0xB9, 0xE8, 0xA9, 0xEF, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB1, 0xAF, 0xB4, 0xE5, 0xEE, 0xB3, 0xAB, 0xEA, 0xB6, 0xAA, 0xB6, 0xAA, 0xB8, 0xE9, 0xA8, 0xEE, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB2, 0xAC, 0xB7, 0xE6, 0xED, 0xB0, 0xA8, 0xE9, 0xB5, 0xA9, 0xB5, 0xA9, 0xBB, 0xEA, 0xAB, 0xED, },
        std::array<byte_t, PERIOD_SIZE>{ 0xB3, 0xAD, 0xB6, 0xE7, 0xEC, 0xB1, 0xA9, 0xE8, 0xB4, 0xA8, 0xB4, 0xA8, 0xBA, 0xEB, 0xAA, 0xEC, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8C, 0x92, 0x89, 0xD8, 0xD3, 0x8E, 0x96, 0xD7, 0x8B, 0x97, 0x8B, 0x97, 0x85, 0xD4, 0x95, 0xD3, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8D, 0x93, 0x88, 0xD9, 0xD2, 0x8F, 0x97, 0xD6, 0x8A, 0x96, 0x8A, 0x96, 0x84, 0xD5, 0x94, 0xD2, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8E, 0x90, 0x8B, 0xDA, 0xD1, 0x8C, 0x94, 0xD5, 0x89, 0x95, 0x89, 0x95, 0x87, 0xD6, 0x97, 0xD1, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8F, 0x91, 0x8A, 0xDB, 0xD0, 0x8D, 0x95, 0xD4, 0x88, 0x94, 0x88, 0x94, 0x86, 0xD7, 0x96, 0xD0, },
        std::array<byte_t, PERIOD_SIZE>{ 0x88, 0x96, 0x8D, 0xDC, 0xD7, 0x8A, 0x92, 0xD3, 0x8F, 0x93, 0x8F, 0x93, 0x81, 0xD0, 0x91, 0xD7, },
        std::array<byte_t, PERIOD_SIZE>{ 0x89, 0x97, 0x8C, 0xDD, 0xD6, 0x8B, 0x93, 0xD2, 0x8E, 0x92, 0x8E, 0x92, 0x80, 0xD1, 0x90, 0xD6, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8A, 0x94, 0x8F, 0xDE, 0xD5, 0x88, 0x90, 0xD1, 0x8D, 0x91, 0x8D, 0x91, 0x83, 0xD2, 0x93, 0xD5, },
        std::array<byte_t, PERIOD_SIZE>{ 0x8B, 0x95, 0x8E, 0xDF, 0xD4, 0x89, 0x91, 0xD0, 0x8C, 0x90, 0x8C, 0x90, 0x82, 0xD3, 0x92, 0xD4, },
        std::array<byte_t, PERIOD_SIZE>{ 0x84, 0x9A, 0x81, 0xD0, 0xDB, 0x86, 0x9E, 0xDF, 0x83, 0x9F, 0x83, 0x9F, 0x8D, 0xDC, 0x9D, 0xDB, },
        std::array<byte_t, PERIOD_SIZE>{ 0x85, 0x9B, 0x80, 0xD1, 0xDA, 0x87, 0x9F, 0xDE, 0x82, 0x9E, 0x82, 0x9E, 0x8C, 0xDD, 0x9C, 0xDA, },
        std::array<byte_t, PERIOD_SIZE>{ 0x86, 0x98, 0x83, 0xD2, 0xD9, 0x84, 0x9C, 0xDD, 0x81, 0x9D, 0x81, 0x9D, 0x8F, 0xDE, 0x9F, 0xD9, },
        std::array<byte_t, PERIOD_SIZE>{ 0x87, 0x99, 0x82, 0xD3, 0xD8, 0x85, 0x9D, 0xDC, 0x80, 0x9C, 0x80, 0x9C, 0x8E, 0xDF, 0x9E, 0xD8, },
        std::array<byte_t, PERIOD_SIZE>{ 0x80, 0x9E, 0x85, 0xD4, 0xDF, 0x82, 0x9A, 0xDB, 0x87, 0x9B, 0x87, 0x9B, 0x89, 0xD8, 0x99, 0xDF, },
        std::array<byte_t, PERIOD_SIZE>{ 0x81, 0x9F, 0x84, 0xD5, 0xDE, 0x83, 0x9B, 0xDA, 0x86, 0x9A, 0x86, 0x9A, 0x88, 0xD9, 0x98, 0xDE, },
        std::array<byte_t, PERIOD_SIZE>{ 0x82, 0x9C, 0x87, 0xD6, 0xDD, 0x80, 0x98, 0xD9, 0x85, 0x99, 0x85, 0x99, 0x8B, 0xDA, 0x9B, 0xDD, },
        std::array<byte_t, PERIOD_SIZE>{ 0x83, 0x9D, 0x86, 0xD7, 0xDC, 0x81, 0x99, 0xD8, 0x84, 0x98, 0x84, 0x98, 0x8A, 0xDB, 0x9A, 0xDC, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9C, 0x82, 0x99, 0xC8, 0xC3, 0x9E, 0x86, 0xC7, 0x9B, 0x87, 0x9B, 0x87, 0x95, 0xC4, 0x85, 0xC3, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9D, 0x83, 0x98, 0xC9, 0xC2, 0x9F, 0x87, 0xC6, 0x9A, 0x86, 0x9A, 0x86, 0x94, 0xC5, 0x84, 0xC2, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9E, 0x80, 0x9B, 0xCA, 0xC1, 0x9C, 0x84, 0xC5, 0x99, 0x85, 0x99, 0x85, 0x97, 0xC6, 0x87, 0xC1, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9F, 0x81, 0x9A, 0xCB, 0xC0, 0x9D, 0x85, 0xC4, 0x98, 0x84, 0x98, 0x84, 0x96, 0xC7, 0x86, 0xC0, },
        std::array<byte_t, PERIOD_SIZE>{ 0x98, 0x86, 0x9D, 0xCC, 0xC7, 0x9A, 0x82, 0xC3, 0x9F, 0x83, 0x9F, 0x83, 0x91, 0xC0, 0x81, 0xC7, },
        std::array<byte_t, PERIOD_SIZE>{ 0x99, 0x87, 0x9C, 0xCD, 0xC6, 0x9B, 0x83, 0xC2, 0x9E, 0x82, 0x9E, 0x82, 0x90, 0xC1, 0x80, 0xC6, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9A, 0x84, 0x9F, 0xCE, 0xC5, 0x98, 0x80, 0xC1, 0x9D, 0x81, 0x9D, 0x81, 0x93, 0xC2, 0x83, 0xC5, },
        std::array<byte_t, PERIOD_SIZE>{ 0x9B, 0x85, 0x9E, 0xCF, 0xC4, 0x99, 0x81, 0xC0, 0x9C, 0x80, 0x9C, 0x80, 0x92, 0xC3, 0x82, 0xC4, },
        std::array<byte_t, PERIOD_SIZE>{ 0x94, 0x8A, 0x91, 0xC0, 0xCB, 0x96, 0x8E, 0xCF, 0x93, 0x8F, 0x93, 0x8F, 0x9D, 0xCC, 0x8D, 0xCB, },
        std::array<byte_t, PERIOD_SIZE>{ 0x95, 0x8B, 0x90, 0xC1, 0xCA, 0x97, 0x8F, 0xCE, 0x92, 0x8E, 0x92, 0x8E, 0x9C, 0xCD, 0x8C, 0xCA, },
        std::array<byte_t, PERIOD_SIZE>{ 0x96, 0x88, 0x93, 0xC2, 0xC9, 0x94, 0x8C, 0xCD, 0x91, 0x8D, 0x91, 0x8D, 0x9F, 0xCE, 0x8F, 0xC9, },
        std::array<byte_t, PERIOD_SIZE>{ 0x97, 0x89, 0x92, 0xC3, 0xC8, 0x95, 0x8D, 0xCC, 0x90, 0x8C, 0x90, 0x8C, 0x9E, 0xCF, 0x8E, 0xC8, },
        std::array<byte_t, PERIOD_SIZE>{ 0x90, 0x8E, 0x95, 0xC4, 0xCF, 0x92, 0x8A, 0xCB, 0x97, 0x8B, 0x97, 0x8B, 0x99, 0xC8, 0x89, 0xCF, },
        std::array<byte_t, PERIOD_SIZE>{ 0x91, 0x8F, 0x94, 0xC5, 0xCE, 0x93, 0x8B, 0xCA, 0x96, 0x8A, 0x96, 0x8A, 0x98, 0xC9, 0x88, 0xCE, },
        std::array<byte_t, PERIOD_SIZE>{ 0x92, 0x8C, 0x97, 0xC6, 0xCD, 0x90, 0x88, 0xC9, 0x95, 0x89, 0x95, 0x89, 0x9B, 0xCA, 0x8B, 0xCD, },
        std::array<byte_t, PERIOD_SIZE>{ 0x93, 0x8D, 0x96, 0xC7, 0xCC, 0x91, 0x89, 0xC8, 0x94, 0x88, 0x94, 0x88, 0x9A, 0xCB, 0x8A, 0xCC, },
    };

    for (std::size_t i = 0; i < data.size(); ++i)
    {
        data[i] = ENCRYPTION_TABLE[data[i]][i % PERIOD_SIZE];
    }
}

int main(int argc, char* argv[]) try
{
    if (argc != 3)
    {
        throw std::invalid_argument("Error: you must pass 2 integers as CLI-arguments");
    }

    std::filesystem::path input_filename = argv[1];
    std::filesystem::path output_filename = argv[2];

    std::vector<byte_t> data = read_from_file(input_filename);
    encrypt(data);
    store_to_file(output_filename, data);
}
catch (const std::exception& e)
{
    std::cerr << e.what() << "\nAborting\n";
    return 1;
}
